services:
  cleaningbiz-server:
    image: vinh2105/cleaningbiz-server:${SERVER_IMAGE_TAG}
    container_name: cleaningbiz-server-prod
    restart: always
    ports:
      - "127.0.0.1:4001:4001"
    env_file:
      - ../cleaningbiz-server/.env
    depends_on:
      - mongodb
    networks:
      - cleaningbiz-network

  cleaningbiz-client:
    image: vinh2105/cleaningbiz-client:${CLIENT_IMAGE_TAG}
    container_name: cleaningbiz-client-prod
    restart: always
    ports:
      - "127.0.0.1:3000:3000"
    env_file:
      - ../cleaningbiz-client/.env
    depends_on:
      - cleaningbiz-server
    networks:
      - cleaningbiz-network

  mongodb:
    container_name: mongodb_container
    image: mongo:8.0.5
    restart: always
    ports:
      - "127.0.0.1:27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: iamadmin2105
      MONGO_INITDB_DATABASE: cleaningbiz
    command:
      [
        "mongod",
        "-v",
        "--bind_ip",
        "0.0.0.0",
        "--logpath",
        "/var/log/mongodb/mongod.log",
        "--logRotate",
        "reopen",
        "--logappend",
      ]
    volumes:
      - ./docker-volumes/data:/data/db
      - ./cleaningbiz-init:/docker-entrypoint-initdb.d
      - ./docker-volumes/log:/var/log/mongodb
      - ./docker-volumes/logrotate/mongod.conf:/etc/logrotate.d/mongod.conf
    networks:
      - cleaningbiz-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.51.0
    privileged: true
    devices:
      - /dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/machine-id:/etc/machine-id:ro
      - /var/lib/dbus/machine-id:/var/lib/dbus/machine-id:ro
    networks:
      - cleaningbiz-network

  mongodb-exporter:
    image: percona/mongodb_exporter:0.40
    container_name: mongodb_exporter
    restart: always
    command:
      - "--mongodb.uri=mongodb://cleaningbizAdmin:donothackmeagain@mongodb:27017/cleaningbiz"
      - "--collect-all"
      - "--compatible-mode"
      - "--log.level=debug"
    ports:
      - "127.0.0.1:9216:9216"
    depends_on:
      - mongodb
    networks:
      - cleaningbiz-network

  prometheus:
    image: prom/prometheus:v2.55.1
    command:
      - --config.file=/etc/prometheus/prometheus.yaml
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
    depends_on:
      - cadvisor
      - mongodb-exporter
    networks:
      - cleaningbiz-network

  grafana:
    image: grafana/grafana:11.3.0-security-01
    container_name: grafana
    restart: always
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - .docker/monitoring/data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - cleaningbiz-network

volumes:
  mongodb_data:

networks:
  cleaningbiz-network:

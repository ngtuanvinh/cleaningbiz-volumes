name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Deploy to VPS
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VPS_USER: ${{ secrets.SSH_USER }}
          VPS_IP: ${{ secrets.SSH_HOST }}
        run: |
          echo "$SSH_PRIVATE_KEY" > deploy_key
          chmod 600 deploy_key

          # SSH and deploy
          ssh -i deploy_key -o StrictHostKeyChecking=no $VPS_USER@$VPS_IP << 'EOF'
            set -e
            echo "‚úÖ Connected to VPS"

            # Load environment variables
            if [ -f ~/cleaningbiz.env ]; then
              echo "üîç Loading environment variables from ~/cleaningbiz.env"
              export $(grep -v '^#' ~/cleaningbiz.env | xargs)
            else
              echo "‚ùå Environment file not found!"
              exit 1
            fi

            # Navigate to volumes folder
            sudo chmod -R 777 ~/cleanbiz/cleangbiz-volumes
            cd ~/cleaningbiz/cleaningbiz-volumes

            if [ ! -d ./docker-volumes/log ]; then
              echo "üìÇ Creating missing ./docker-volumes/log directory"
              sudo mkdir -p ./docker-volumes/log
            fi

            # Ensure mongod.log exists and has proper permissions
            if [ ! -f ./docker-volumes/log/mongod.log ]; then
              echo "üìÑ Creating mongod.log file"
              sudo touch ./docker-volumes/log/mongod.log
            fi
            

            # Ensure logrotate configuration exists
            if [ ! -d ./docker-volumes/logrotate ]; then
              echo "üìÇ Creating ./docker-volumes/logrotate directory"
              sudo mkdir -p ./docker-volumes/logrotate
            fi

            if [ ! -f ./docker-volumes/logrotate/mongod.conf ]; then
              echo "üìù Creating mongod.conf for logrotate"
              cat << 'LOGCONF' | sudo tee ./docker-volumes/logrotate/mongod.conf > /dev/null
              /var/log/mongodb/mongod.log {
                  daily
                  size 10M
                  rotate 10
                  missingok
                  compress
                  compresscmd /usr/bin/bzip2
                  uncompresscmd /usr/bin/bunzip2
                  compressoptions -9
                  compressext .bz2
                  delaycompress
                  notifempty
                  create 640 root root
                  sharedscripts
                  postrotate
                      /bin/kill -SIGUSR1 `cat /var/run/mongodb/mongod.pid 2>/dev/null` >/dev/null 2>&1
                      find /var/log/mongodb -type f -size 0 -regextype posix-awk -regex "^\/var\/log\/mongodb\/mongod\.log\.[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}-[0-9]{2}-[0-9]{2}$" -execdir rm {} \; >/dev/null 2>&1
                  endscript
              }
          LOGCONF
            fi

            # Ensure logrotate config is in the correct location
            echo "üì§ Copying mongod.conf to /etc/logrotate.d/"
            sudo cp ./docker-volumes/logrotate/mongod.conf /etc/logrotate.d/mongod.conf

            # Verify logrotate setup
            echo "üîÑ Forcing logrotate check"
            sudo logrotate -fv /etc/logrotate.d/mongod.conf || echo "‚ö†Ô∏è Logrotate check failed"

            # Pull latest changes and restart containers
            git reset --hard
            git pull origin main

            # Restart containers with loaded variables
            docker compose up -d

            echo "üöÄ Deployment completed!"
          EOF
